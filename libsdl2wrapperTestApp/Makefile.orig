ARCH := $(shell getconf LONG_BIT)
ifeq ($(OS),Windows_NT)
DYN_LIB_EXT := .dll
BUILD_ROOT := Cygwin
else
DYN_LIB_EXT := .so
BUILD_ROOT := Build-Linux
endif

ARCH_FLAG := -m32
PLATFORM := x86
ifeq ($(ARCH),64)
ARCH_FLAG := -m64
PLATFORM := x64
endif

DIAG_FLAG := -fdiagnostics-color=always
CC := g++ $(ARCH_FLAG) $(DIAG_FLAG) -fPIC
CC_LINK := g++ $(ARCH_FLAG) $(DIAG_FLAG)
COMPILER_FLAGS := -pedantic -Wall -std=c++11 -D MogeLib_EXPORT="1" -Wno-ignored-attributes
COMPILER_FLAGS := $(COMPILER_FLAGS) -D SDL2W_EXPORT
DEBUG_FLAGS = -ggdb
RELEASE_FLAGS = -Ofast
PROJECT_NAME = Tests
BINARY_NAME = $(PROJECT_NAME).exe
OUTPUT_DIR := ../build
OUTPUT_DIR_DEBUG = $(OUTPUT_DIR)/Debug
OUTPUT_DIR_RELEASE = $(OUTPUT_DIR)/Release
RUN_DIR := ../run

# DEPS
DEPS_HOME := ../deps
# DEPS::CUL
CUL_HOME := $(DEPS_HOME)/CUL
CUL_INC := $(CUL_HOME)/libcul/inc
CUL_LIB := $(CUL_HOME)/build
CUL_LIB_DEBUG := $(CUL_LIB)/Debug/libcul.so
CUL_LIB_RELEASE := $(CUL_LIB)/Release/libcul.so
COMPILER_FLAGS := $(COMPILER_FLAGS) -D CUL_EXPORT
# DEPS: SDL2W
SDL2W_HOME := ../libsdl2wrapper
SDL2W_INC := $(SDL2W_HOME)/inc
SDL2W_LIB := ../build
SDL2W_LIB_DEBUG := $(SDL2W_LIB)/Debug
SDL2W_LIB_RELEASE := $(SDL2W_LIB)/Release
SDL2W_FILE_DEBUG := $(SDL2W_LIB_DEBUG)/libsdl2wrapper.so
SDL2W_FILE_RELEASE := $(SDL2W_LIB_RELEASE)/libsdl2wrapper.so

<<<<<<< Updated upstream
IMPORT_LIBS := -lsdl2wrapper -pthread -ldl
IMPORT_LIBS_DEBUG := $(CUL_LIB_DEBUG) -L $(SDL2W_LIB_DEBUG) $(IMPORT_LIBS) 
IMPORT_LIBS_RELEASE := $(CUL_LIB_RELEASE) -L $(SDL2W_LIB_RELEASE) $(IMPORT_LIBS)
=======
IMPORT_LIBS_DEBUG := $(CUL_LIB_DEBUG) libsdl2wrapper.so -L $(SDL2W_LIB_DEBUG) -lsdl2wrapper -pthread
IMPORT_LIBS_RELEASE := $(CUL_LIB_RELEASE) libsdl2wrapper.so -L $(SDL2W_LIB_RELEASE) -lsdl2wrapper -pthread
>>>>>>> Stashed changes

CPP_FILES := $(wildcard *.cpp)

# OBJ:
OBJ_DEBUG_DIR := $(OUTPUT_DIR_DEBUG)/intermediate_$(PROJECT_NAME)/debug/
OBJ_RELEASE_DIR := $(OUTPUT_DIR_RELEASE)/intermediate_$(PROJECT_NAME)/release/
OBJ_DEBUG_FILES := $(addprefix $(OBJ_DEBUG_DIR),$(CPP_FILES:.cpp=.o))
OBJ_RELEASE_FILES := $(addprefix $(OBJ_RELEASE_DIR),$(CPP_FILES:.cpp=.o))

HEADERS_INC := -I $(CUL_INC) -I $(SDL2W_INC)

debug: $(OUTPUT_DIR_DEBUG)/$(BINARY_NAME)
release: $(OUTPUT_DIR_RELEASE)/$(BINARY_NAME)

start_debug: $(OUTPUT_DIR_DEBUG)/$(BINARY_NAME)
	cp $(SDL2W_FILE_DEBUG) -v $(RUN_DIR)/
	cd $(RUN_DIR);LD_LIBRARY_PATH=$(OUTPUT_DIR_DEBUG) gdb $<

run_debug: $(OUTPUT_DIR_DEBUG)/$(BINARY_NAME)
	cp $(SDL2W_FILE_DEBUG) -v $(RUN_DIR)/
	cd $(RUN_DIR);LD_LIBRARY_PATH=$(OUTPUT_DIR_DEBUG) ./$<

run_release: $(OUTPUT_DIR_RELEASE)/$(BINARY_NAME)
	cp $(SDL2W_FILE_RELEASE) -v $(RUN_DIR)/
	cd $(RUN_DIR);LD_LIBRARY_PATH=$(OUTPUT_DIR_RELEASE) ./$<

$(OUTPUT_DIR_DEBUG)/$(BINARY_NAME): $(OBJ_DEBUG_FILES) $(OUTPUT_DIR_DEBUG)
	@mkdir -p $(@D)
	$(CC_LINK) -o $(OUTPUT_DIR_DEBUG)/$(BINARY_NAME) $(OBJ_DEBUG_FILES) $(IMPORT_LIBS_DEBUG) $(IMPORT_LIBS_FILES)

$(OUTPUT_DIR_RELEASE)/$(BINARY_NAME): $(OBJ_RELEASE_FILES) $(OUTPUT_DIR_RELEASE)
	@mkdir -p $(@D)
	$(CC_LINK) -o $(OUTPUT_DIR_RELEASE)/$(BINARY_NAME) $(OBJ_RELEASE_FILES) $(IMPORT_LIBS_RELEASE) $(IMPORT_LIBS_FILES)

$(OUTPUT_DIR_DEBUG):
	mkdir -p $@

$(OUTPUT_DIR_RELEASE):
	mkdir -p $@

$(OBJ_DEBUG_DIR)%.o: %.cpp
	mkdir -p $(dir $@)
	$(CC) $(HEADERS_INC) $(COMPILER_FLAGS) $(DEBUG_FLAGS) -c -o $@ $<

$(OBJ_RELEASE_DIR)%.o: %.cpp
	mkdir -p $(dir $@)
	$(CC) $(HEADERS_INC) $(COMPILER_FLAGS) $(RELEASE_FLAGS) -c -o $@ $<

clean:
	rm -f $(OBJ_DEBUG_FILES)
	rm -f $(OBJ_RELEASE_FILES)
	rm -f $(OUTPUT_DEBUG)
	rm -f $(OUTPUT_RELEASE)

clear_all:
	find . -name '*.o' | xargs rm

test:
	@echo "All .o files: $(OBJ_DEBUG_FILES)"
	@echo "All .cpp files: $(CPP_FILES)"
	@echo "ARCH: $(ARCH)"
